/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Snake;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author alex3
 */
public class UserFrame extends javax.swing.JFrame {
    private final Conf conf;
    
    /**
     * Creates new form UserFrame
     */
    public UserFrame(Conf conf) {
        this.conf = conf;
        initComponents();
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent event) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        if (userFieldEditable()) {
                            //https://www.tutorialspoint.com/how-to-match-a-non-word-character-using-java-regex
                            /*String user = userField.getText().toLowerCase().
                                    replaceAll("\\W+", "");*/
                            conf.writeUser(userField.getText());
                        }
                        new MainFrame(conf).setVisible(true);
                    }
                });
            }
        });
        userBox.setModel(makeUserBoxModel());
    }
    
    private DefaultComboBoxModel makeUserBoxModel() {
        String[] users = new RecordSave().readUsers();
        String[] modelArray = new String[users.length + 2];
        modelArray[0] = "anonymous";
        modelArray[modelArray.length - 1] = "Новий...";
        for (int i = 0; i < users.length; i++) {
            modelArray[i + 1] = users[i];
        }
        return new DefaultComboBoxModel<String>(modelArray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userBox = new javax.swing.JComboBox<>();
        userField = new javax.swing.JTextField();
        playButton = new javax.swing.JButton();

        userBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "anonymous", "New..." }));
        userBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userBoxActionPerformed(evt);
            }
        });

        userField.setEditable(false);

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userField)
                    .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(userBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(playButton)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_playButtonActionPerformed

    private void userBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userBoxActionPerformed
        userField.setEditable(userFieldEditable());
        
        if (userFieldEditable()) {
            conf.writeUser(userField.getText());
        } else {
            conf.writeUser(userBox.getItemAt(userBox.getSelectedIndex()));
        }
    }//GEN-LAST:event_userBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton playButton;
    private javax.swing.JComboBox<String> userBox;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables

    private boolean userFieldEditable() {
        int index = userBox.getSelectedIndex();
        return (userBox.getItemCount() == (index + 1));
    }
}
